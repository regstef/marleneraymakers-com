{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm create:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(rm:*)",
      "Bash(supabase start:*)",
      "Bash(supabase init:*)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(chmod:*)",
      "Bash(curl:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(python:*)",
      "Bash(npm run dev:*)",
      "Bash(open /Users/regstef/Documents/claude-code-projects/mr-price-calculator/test.html)",
      "Bash(npm uninstall:*)",
      "Bash(npm ls:*)",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(true)",
      "Bash(find:*)",
      "Bash(node:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright install:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm audit fix:*)",
      "Bash(mv:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(kill:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__read_file",
      "mcp__filesystem__write_file",
      "mcp__filesystem__edit_file",
      "Bash(./start.sh:*)",
      "Bash(uvicorn:*)",
      "Bash(timeout:*)",
      "Bash(npx tsc:*)",
      "Bash(cp:*)",
      "Bash(npx next build:*)",
      "Bash(npx next:*)",
      "npx next",
      "mcp__filesystem__create_directory",
      "pkill -f uvicorn",
      "pkill -f vite",
      "Bash(PORT=3000 npm run dev)",
      "Bash(PORT=8000 uvicorn main:app --reload --host 0.0.0.0 --port 8000)",
      "Bash(python3 -m venv venv)",
      "Bash(NODE_OPTIONS='--trace-warnings' npm run dev)",
      "Bash(bash:*)",
      "Bash(DEBUG=*)",
      "Bash(npm start)",
      "Bash(PORT=3001 npm run dev)",
      "mcp__filesystem__list_allowed_directories",
      "mcp__filesystem__list_directory",
      "mcp__context7-mcp__resolve-library-id",
      "mcp__playwright__playwright_navigate",
      "mcp__playwright__playwright_screenshot",
      "mcp__playwright__playwright_get_visible_text",
      "mcp__playwright__playwright_close",
      "mcp__supabase__list_projects",
      "mcp__supabase__list_organizations",
      "mcp__supabase__get_project",
      "Bash(claude mcp:*)",
      "mcp__playwright__playwright_fill",
      "mcp__playwright__playwright_get_visible_html",
      "mcp__playwright__playwright_click",
      "mcp__playwright__playwright_evaluate",
      "mcp__playwright__playwright_press_key",
      "mcp__playwright__playwright_console_logs",
      "Bash(./test-cors.sh:*)",
      "Bash(sed:*)",
      "curl:*",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(npx sv create:*)",
      "Bash(npm init:*)",
      "Bash(npx prisma init:*)",
      "Bash(npx svelte-kit sync)",
      "Bash(npx:*)",
      "Bash(PORT=3000 npm run dev -- --port 3000 --host 0.0.0.0)",
      "Bash(npm run preview:*)",
      "Bash(npm run check:*)",
      "Bash(nc:*)",
      "Bash(npm run:*)",
      "WebFetch(domain:www.shadcn-svelte.com)",
      "WebFetch(domain:next.shadcn-svelte.com)",
      "WebFetch(domain:bits-ui.com)",
      "WebFetch(domain:next.bits-ui.com)",
      "Bash(CI=1 npx shadcn-svelte@latest init)",
      "Bash(pnpm dlx:*)",
      "Bash(sqlite3:*)",
      "mcp__playwright__playwright_select",
      "mcp__ide__getDiagnostics",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rg:*)",
      "mcp__playwright__playwright_go_back",
      "mcp__github__create_repository",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(gh repo edit:*)",
      "mcp__github__create_issue",
      "mcp__github__update_issue",
      "mcp__github__add_issue_comment",
      "Bash(git pull:*)",
      "mcp__github__get_issue",
      "mcp__github__search_issues",
      "mcp__github__list_issues",
      "mcp__github__get_me",
      "mcp__github__search_repositories",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "mcp__openmemory__add_memories",
      "Bash(yarn --version)",
      "Bash(cat:*)",
      "WebFetch(domain:marleneraymakers.com)",
      "Bash(^C)",
      "WebFetch(domain:placehold.co)",
      "WebFetch(domain:www.choozr.ai)",
      "mcp__openmemory__search_memory",
      "Bash(pg_isready:*)",
      "Bash(brew services:*)",
      "Bash(./stop-dev.sh:*)",
      "Bash(npm cache clean:*)",
      "Bash(yarn install)",
      "Bash(docker run:*)",
      "WebFetch(domain:developer.choozr.ai)",
      "Bash(npm test:*)",
      "Bash(gh issue list:*)",
      "Bash(./start-dev.sh:*)",
      "mcp__playwright__playwright_hover",
      "Bash(tree:*)",
      "mcp__github__search_code",
      "mcp__github__list_commits",
      "mcp__github__get_commit",
      "mcp__github__get_file_contents",
      "mcp__github__get_issue_comments",
      "Bash(docker exec:*)",
      "WebFetch(domain:docs.medusajs.com)",
      "mcp__brave-search__brave_web_search",
      "Bash(gh auth:*)",
      "Bash(gh repo create:*)",
      "Bash(git checkout:*)",
      "Bash(git remote set-url:*)",
      "Bash(sv create:*)",
      "WebFetch(domain:dev.to)",
      "Bash(./start-frontend.sh:*)",
      "Bash(brew install:*)",
      "Bash(export:*)",
      "Bash(createdb:*)",
      "WebFetch(domain:tailwindcss.com)",
      "Bash(npm view:*)",
      "WebFetch(domain:strapi.io)",
      "Bash(sanity init:*)",
      "WebFetch(domain:svelte.cloudinary.dev)",
      "Bash(yarn add:*)",
      "WebFetch(domain:github.com)",
      "mcp__taskmaster-ai__initialize_project",
      "mcp__taskmaster-ai__parse_prd",
      "mcp__taskmaster-ai__models",
      "mcp__taskmaster-ai__get_tasks",
      "mcp__taskmaster-ai__update",
      "mcp__taskmaster-ai__update_task",
      "mcp__taskmaster-ai__generate",
      "Bash(diff:*)",
      "mcp__taskmaster-ai__analyze_project_complexity",
      "mcp__taskmaster-ai__expand_all",
      "mcp__taskmaster-ai__get_task",
      "WebFetch(domain:inlang.com)",
      "WebFetch(domain:www.reddit.com)",
      "WebFetch(domain:ui.shadcn.com)",
      "WebFetch(domain:manupa.dev)",
      "WebFetch(domain:tillitsdone.com)",
      "WebFetch(domain:www.browserstack.com)",
      "WebFetch(domain:www.smashingmagazine.com)",
      "WebFetch(domain:blog.logrocket.com)",
      "WebFetch(domain:www.glideapps.com)",
      "Bash(npm i:*)",
      "Bash(npm rebuild:*)",
      "Bash(tar:*)",
      "Bash(npm pack:*)",
      "mcp__gemini__chat",
      "mcp__gemini__think_deeper",
      "mcp__gemini__debug_issue",
      "WebFetch(domain:daisyui.com)"
    ],
    "deny": []
  }
}